{"version":3,"sources":["actions/actions.js","actions/actionTypes.js","components/Search.js","components/User.js","components/UserList.js","components/Loading.js","container/page.js","components/Repo.js","components/Details.js","container/App.js","serviceWorker.js","reducers/reducer.js","store/createStore.js","index.js"],"names":["fetchUsers","userName","dispatch","type","axios","get","then","res","data","items","users","catch","err","error","fetchUserAndRepos","user","getState","json","userData","receiveUserData","fetchUserData","currentUserData","isFetching","message","repos","receiveRepos","fetchRepos","Search","onSubmit","useState","input","setInput","className","e","preventDefault","placeholder","value","onChange","target","User","key","id","to","login","alt","src","avatar_url","UserList","usersList","map","Loading","Page","handleSubmit","props","renderList","length","this","Component","connect","state","Repo","repo","href","name","description","language","stargazers_count","aria-hidden","forks_count","license","ReactTimeAgo","date","updated_at","userRepos","match","useEffect","params","App","path","exact","component","Details","Boolean","window","location","hostname","rootReducer","combineReducers","action","Object","assign","currentUser","store","createStore","applyMiddleware","logger","thunkMiddleware","JavascriptTimeAgo","addLocale","en","ru","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.3b474b73.chunk.js","sourcesContent":["import {\r\n    REQUEST_USERS,\r\n    RECEIVE_USERS,\r\n    RECEIVE_USERS_ERROR,\r\n    SELECT_USER,\r\n    REQUEST_USERDATA,\r\n    RECEIVE_USERDATA,\r\n    RECEIVE_USERDATA_ERROR,\r\n    REQUEST_REPOS,\r\n    RECEIVE_REPOS,\r\n    RECEIVE_REPOS_ERROR,\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\n// export function findUser(userName) {\r\n//     return {\r\n//         type: FIND_USER,\r\n//         userName,\r\n//     };\r\n// }\r\n\r\nexport function requestUsers() {\r\n    return {\r\n        type: REQUEST_USERS,\r\n    };\r\n}\r\n\r\nfunction receiveUsers(json) {\r\n    return {\r\n        type: RECEIVE_USERS,\r\n        users: json,\r\n    };\r\n}\r\n\r\nfunction receiveUsersErr(error) {\r\n    return {\r\n        type: RECEIVE_USERS_ERROR,\r\n        error,\r\n    };\r\n}\r\n\r\nexport function selectUser(user) {\r\n    return {\r\n        type: SELECT_USER,\r\n        user,\r\n    };\r\n}\r\n\r\nexport function requestUserData() {\r\n    return {\r\n        type: REQUEST_USERDATA,\r\n    };\r\n}\r\n\r\nfunction receiveUserData(json) {\r\n    return {\r\n        type: RECEIVE_USERDATA,\r\n        userData: json,\r\n    };\r\n}\r\n\r\nfunction receiveUserDataErr(error) {\r\n    return {\r\n        type: RECEIVE_USERDATA_ERROR,\r\n        error,\r\n    };\r\n}\r\n\r\nfunction requestRepos() {\r\n    return {\r\n        type: REQUEST_REPOS,\r\n    };\r\n}\r\n\r\nfunction receiveRepos(json) {\r\n    return {\r\n        type: RECEIVE_REPOS,\r\n        repos: json,\r\n    };\r\n}\r\n\r\nfunction receiveReposErr(error) {\r\n    return {\r\n        type: RECEIVE_REPOS_ERROR,\r\n        error,\r\n    };\r\n}\r\n\r\nexport function fetchUsers(userName) {\r\n    return dispatch => {\r\n        dispatch(requestUsers(userName));\r\n        return axios.get(`https://api.github.com/search/users?q=${userName}&user=name`)\r\n            .then(res => res.data.items)\r\n            .then(items => dispatch(receiveUsers(items)))\r\n            .catch(err => dispatch(receiveUsersErr(err)));\r\n    };\r\n}\r\nexport function fetchUserData(user) {\r\n    return dispatch => {\r\n        dispatch(requestUserData());\r\n        return axios.get(`https://api.github.com/users/${user}`)\r\n            .then(res => res.data)\r\n            .then(json => dispatch(receiveUserData(json)))\r\n            .catch(err => dispatch(receiveUserDataErr(err)));\r\n    };\r\n}\r\n\r\nfunction fetchRepos(user) {\r\n    return dispatch => {\r\n        dispatch(requestRepos());\r\n        return axios.get(`https://api.github.com/users/${user}/repos`)\r\n            .then(res => res.data)\r\n            .then(json => dispatch(receiveRepos(json)))\r\n            .catch(err => dispatch(receiveReposErr(err)));\r\n    };\r\n}\r\n\r\nexport function fetchUserAndRepos(user) {\r\n    return (dispatch, getState) => {\r\n        return dispatch(fetchUserData(user)).then(() => {\r\n            debugger;\r\n            const { currentUserData } = getState();\r\n            if (\r\n                !currentUserData.isFetching &&\r\n                currentUserData.userData.message\r\n            ) {\r\n                return;\r\n            }\r\n            return dispatch(fetchRepos(user));\r\n        });\r\n    };\r\n}","\r\n\r\n// export const FIND_USER ='FIND_USER';\r\nexport const REQUEST_USERS ='REQUEST_USERS';\r\nexport const RECEIVE_USERS ='RECEIVE_USERS';\r\nexport const RECEIVE_USERS_ERROR='RECEIVE_USERS_ERROR';\r\n\r\nexport const SELECT_USER ='SELECT_USER';\r\nexport const REQUEST_USERDATA ='REQUEST_USERDATA';\r\nexport const RECEIVE_USERDATA ='RECEIVE_USERDATA';\r\nexport const RECEIVE_USERDATA_ERROR ='RECEIVE_USERDATA_ERROR';\r\n\r\nexport const REQUEST_REPOS ='REQUEST_REPOS';\r\nexport const RECEIVE_REPOS ='RECEIVE_REPOS';\r\nexport const RECEIVE_REPOS_ERROR ='RECEIVE_REPOS_ERROR';\r\n","import React, { useState } from 'react';\r\nimport '../styles/search.css';\r\n\r\nconst Search = ({ onSubmit }) => {\r\n\r\n    const [input, setInput] = useState('');\r\n\r\n    const onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        if (input !== '') {\r\n            onSubmit(input);\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"search-box\">\r\n            <form className=\"subnav-search float-left col-4\" onSubmit={onSubmitForm}>\r\n                <input className=\"form-control subnav-search-input  auto-search-input \"\r\n                    placeholder=\"Enter the user name...\"\r\n                    type='text'\r\n                    value={input}\r\n                    onChange={(e) => { setInput(e.target.value) }} />\r\n            </form>\r\n        </div>);\r\n\r\n}\r\n\r\nexport default Search;","\r\nimport React from 'react'\r\nimport '../styles/user.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst User = ({ userData }) => {\r\n\r\n    return (\r\n        <li key={userData.id}>\r\n            <Link to={`/users/${userData.login}`}>\r\n                <div className=\"list-item\">\r\n                    <div className=\"table-list-cell py-3 pr-0\">\r\n                        <img className=\"avatar\" alt=\"avatar\" src={userData.avatar_url} />\r\n                    </div>\r\n                    <div className=\"table-list-cell py-3 pl-3 username\" >\r\n                        <div >{userData.login}</div>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react'\r\nimport '../styles/user.css';\r\nimport User from './User';\r\n\r\n const UserList = ({ usersList }) => {\r\n  return (\r\n    <ul className=\"table-list\" >\r\n      {usersList.map(user => <User key={user.id} userData={user} />)}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default UserList;","import React from 'react';\r\nimport '../styles/search.css';\r\n\r\nconst Loading = ()=> <div className=\"loading\"> <h2>Loading...</h2></div>\r\n\r\nexport default Loading;","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUsers } from '../actions/actions';\r\nimport Search from '../components/Search';\r\nimport UserList from '../components/UserList';\r\nimport '../styles/search.css';\r\nimport Loading from '../components/Loading';\r\n\r\nclass Page extends Component {\r\n    handleSubmit = (userName) => {\r\n        const { dispatch } = this.props;\r\n        dispatch(fetchUsers(userName))\r\n    }\r\n\r\n    renderList = (usersList, isFetching) => {\r\n        if (isFetching) {\r\n            return <Loading />\r\n        }\r\n        else if (usersList.length !== 0 && !isFetching) {\r\n            return <UserList usersList={usersList} />\r\n        }\r\n    }\r\n    render() {\r\n        const { usersList, isFetching } = this.props.usersList;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Search onSubmit={this.handleSubmit} />\r\n                {this.renderList(usersList, isFetching)}\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\nfunction mapStateToProps(state) {\r\n    const { usersList } = state;\r\n    return {\r\n        usersList\r\n    };\r\n}\r\nexport default connect(mapStateToProps)(Page);","import React from 'react';\r\nimport ReactTimeAgo from 'react-time-ago'\r\nimport '../styles/details.css';\r\n\r\nconst Repo = ({ repo }) => {\r\n    return (\r\n        <li key ={repo.id} className=\"col-12 d-flex width-full border-bottom\" >\r\n                <div className=\"col-10 col-lg-9 table-list-cell py-3 repo-item\">\r\n                    <div className=\"d-inline-block mb-1\">\r\n                        <h3 className=\"wb-break-all\">\r\n                            <a href='#'>{repo.name}</a>\r\n                        </h3>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"col text-gray mb-2 pl-0\" >\r\n                            {repo.description}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"f6 text-gray mt-2\">\r\n                        {repo.language !== '' ? <span className='ml-0 mr-3'>{repo.language}</span> : null}\r\n                        {repo.stargazers_count ?\r\n                            <span className='mr-3'>\r\n                                <i className=\"fa fa-star-o\" aria-hidden=\"true\"></i>\r\n                                {repo.stargazers_count}\r\n                            </span> : null}\r\n\r\n                        {repo.forks_count ? <span className='mr-3'>\r\n                            <i className=\"fa fa-code-fork\" aria-hidden=\"true\"></i>\r\n                            {repo.forks_count}\r\n                        </span> : null}\r\n\r\n                        {repo.license ? <span className='mr-3'>\r\n                            <i className=\"fa fa-balance-scale\" aria-hidden=\"true\"></i>\r\n                            {repo.license.name}\r\n                        </span> : null}\r\n\r\n                        Updated <ReactTimeAgo date={repo.updated_at}/>\r\n                    </div>\r\n                </div>\r\n\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Repo;","import React , {useEffect} from 'react';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport Repo from './Repo';\r\nimport { fetchUserAndRepos } from '../actions/actions';\r\nimport {connect} from 'react-redux';\r\nimport '../styles/details.css'\r\n\r\nconst Details = (props) => {\r\n    let {match, dispatch, currentUserData, userRepos}= props;\r\n    useEffect(()=> {\r\n        dispatch(fetchUserAndRepos(match.params.userName));\r\n    }, [])\r\n    return (\r\n        <div className=\"container-xl clearfix px-3 mt-4 details\" >\r\n            <div className=\"h-card col-lg-3 col-md-4 col-12 float-md-left pr-md-3 pr-xl-6 head\"> \r\n             <div className=\"card\">\r\n                <img className=\"card-img-top\" src={currentUserData.userData.avatar_url} alt=\"Card image cap1\" />\r\n                <div className=\"card-body pr-0 pl-0\">\r\n                     <h5 className=\"card-title mb-0\">{currentUserData.userData.name}</h5>\r\n                    <p className=\"card-text\">{currentUserData.userData.login} </p>                    </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"ml-3 pl-md-4\">\r\n                <ul className=\"table-list repo-item\">\r\n                {userRepos.repos.map(repo=><Repo key={repo.id} repo={repo}/> )}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = state=> {\r\n    let {currentUserData, userRepos} =state;\r\n    return {\r\n       currentUserData, userRepos\r\n    }\r\n}\r\nexport default connect(mapDispatchToProps)(Details);","import React, { Component } from 'react';\r\nimport Page from './page';\r\nimport Details from '../components/Details';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n            <Router>\r\n              <Switch>\r\n                <Route path='/' exact component={Page} />\r\n                <Route path='/users/:userName' exact component={Details} />\r\n              </Switch>\r\n              <Redirect to='/' />\r\n            </Router>\r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport {\r\n    // FIND_USER,\r\n    REQUEST_USERS,\r\n    RECEIVE_USERS,\r\n    RECEIVE_USERS_ERROR,\r\n    SELECT_USER,\r\n    REQUEST_USERDATA,\r\n    RECEIVE_USERDATA,\r\n    RECEIVE_USERDATA_ERROR,\r\n    REQUEST_REPOS,\r\n    RECEIVE_REPOS,\r\n    RECEIVE_REPOS_ERROR,\r\n} from '../actions/actionTypes';\r\n\r\n// export function findUser(state = '', action) {\r\n//     switch (action.type) {\r\n//         case FIND_USER:\r\n//             return action.userName;\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\nexport function usersList(\r\n    state = {\r\n        isFetching: false,\r\n        usersList: [],\r\n    },\r\n    action\r\n) {\r\n    switch (action.type) {\r\n        case REQUEST_USERS:\r\n            return Object.assign({}, state, {\r\n                isFetching: true,\r\n            });\r\n        case RECEIVE_USERS:\r\n            return Object.assign({}, state, {\r\n                isFetching: false,\r\n                usersList: action.users,\r\n            });\r\n        case RECEIVE_USERS_ERROR:\r\n            return Object.assign({}, state, {\r\n                isFetching: false,\r\n                usersList: action.error,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function currentUser(state = '', action) {\r\n    switch (action.type) {\r\n        case SELECT_USER:\r\n            return action.user;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function currentUserData(\r\n    state = {\r\n        isFetching: false,\r\n        userData: {},\r\n    },\r\n    action\r\n) {\r\n    switch (action.type) {\r\n        case REQUEST_USERDATA:\r\n            return Object.assign({}, state, {\r\n                isFetching: true,\r\n            });\r\n        case RECEIVE_USERDATA:\r\n            return Object.assign({}, state, {\r\n                isFetching: false,\r\n                userData: action.userData,\r\n            });\r\n        case RECEIVE_USERDATA_ERROR:\r\n            return Object.assign({}, state, {\r\n                isFetching: false,\r\n                userData: action.error,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function userRepos(\r\n    state = {\r\n        isFetching: false,\r\n        repos: [],\r\n    },\r\n    action\r\n) {\r\n    switch (action.type) {\r\n        case REQUEST_REPOS:\r\n            return Object.assign({}, state, {\r\n                isFetching: true,\r\n            });\r\n        case RECEIVE_REPOS:\r\n            return Object.assign({}, state, {\r\n                isFetching: false,\r\n                repos: action.repos,\r\n            });\r\n        case RECEIVE_REPOS_ERROR:\r\n            return Object.assign({}, state, {\r\n                isFetching: false,\r\n                repos: action.error,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const rootReducer = combineReducers({\r\n    usersList,\r\n    currentUser,\r\n    currentUserData,\r\n    userRepos,\r\n});","import {createStore, applyMiddleware} from 'redux';\r\nimport thunkMiddleware  from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {rootReducer} from '../reducers/reducer'\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(logger, thunkMiddleware));","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './container/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from './store/createStore'\r\nimport { Provider } from 'react-redux';\r\nimport JavascriptTimeAgo from 'javascript-time-ago'\r\nimport en from 'javascript-time-ago/locale/en';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\n \r\nJavascriptTimeAgo.addLocale(en)\r\nJavascriptTimeAgo.addLocale(ru)\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}